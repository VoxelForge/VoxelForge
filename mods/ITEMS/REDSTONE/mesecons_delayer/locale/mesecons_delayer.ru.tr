# textdomain: mesecons_delayer
Transmits redstone power only in one direction=Передаёт сигнал редстоуна только в одном направлении
Delays signal=Задерживает сигнал
Output locks when getting active redstone repeater signal from the side=Выход фиксируется при наличии активного сигнала сбоку
Redstone repeaters are versatile redstone components with multiple purposes: 1. They only allow signals to travel in one direction. 2. They delay the signal. 3. Optionally, they can lock their output in one state.=Повторители это универсальные компоненты, выполняющие много задач: 1. Разрешают сигналам проходить только в одном направлении. 2. Задерживают сигнал. 3. Опционально они могут зафиксировать свой выходной сигнал в одном состоянии.
To power a redstone repeater, send a signal in “arrow” direction (the input). The signal goes out on the opposite side (the output) with a delay. To change the delay, use the redstone repeater. The delay is between 0.1 and 0.4 seconds long and can be changed in steps of 0.1 seconds. It is indicated by the position of the moving redstone torch.=Чтобы подключить повторитель, подайте сигнал на вход в направлении “стрелки”. Сигнал выйдет с противоположной стороны с задержкой. Чтобы изменить задержку, используйте повторитель. Время задержки изменяется от 0.1 до 0.4 секунды и может изменяться с шагом 0.1 секунды. Время задержки отражает положение передвигающегося факела редстоуна.
To lock a repeater, send a signal from an adjacent repeater into one of its sides. While locked, the moving redstone torch disappears, the output doesn't change and the input signal is ignored.=Чтобы зафиксировать повторитель, подайте сигнал от соседнего повторителя на одну из его сторон. При фиксации передвижной факел редстоуна исчезает, выходной сигнал не меняется, а входной сигнал игнорируется.
Redstone Repeater=Повторитель
Redstone Repeater (Delay @1)=Повторитель (задержка @1)
Redstone Repeater (Delay @1, Powered)=Повторитель (задержка @1, подключённый)
Redstone Repeater (Locked)=Повторитель (фиксированный)
Redstone Repeater (Locked, Powered)=Повторитель (фиксированный, подключённый)
